version: '3.8'

services:
  # Reddit Scraper Backend API
  reddit-scraper-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: reddit-scraper-api
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./output:/app/output
      - ./config:/app/config
    environment:
      - PYTHONPATH=/app
      - DATABASE_PATH=/app/data/reddit_scraper.db
      - LOG_LEVEL=INFO
    networks:
      - reddit-scraper-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Development Server (for development)
  reddit-scraper-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: reddit-scraper-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000/ws
      - CHOKIDAR_USEPOLLING=true
    networks:
      - reddit-scraper-network
    restart: unless-stopped
    depends_on:
      - reddit-scraper-api

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: reddit-scraper-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - reddit-scraper-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: reddit-scraper-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - reddit-scraper-network
    restart: unless-stopped
    depends_on:
      - reddit-scraper-api
      - reddit-scraper-frontend

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: reddit-scraper-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - reddit-scraper-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: reddit-scraper-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - reddit-scraper-network
    restart: unless-stopped
    depends_on:
      - prometheus

networks:
  reddit-scraper-network:
    driver: bridge

volumes:
  redis_data:
  prometheus_data:
  grafana_data: